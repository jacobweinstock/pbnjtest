syntax = "proto3";

option go_package = "github.com/jacobweinstock/pbnjtest/api/v1";
option ruby_package = "Pbnj::Api::V1";

package github.com.tinkerbell.pbnj.api.v1;

import "api/v1/common.proto";

service BMC {
    rpc NetworkSource (NetworkSourceRequest) returns (NetworkSourceResponse);
    rpc Reset(ResetRequest) returns (ResetResponse);
    rpc CreateUser (CreateUserRequest) returns (CreateUserResponse);
    rpc DeleteUser (DeleteUserRequest) returns (DeleteUserResponse);
    rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse);
}

message NetworkSourceRequest {
    v1.Authn authn = 1;
    v1.Vendor vendor = 2;
    NetworkSource network_source = 3;
}

message NetworkSourceResponse {
    string task_id = 1;
}

message ResetRequest {
    v1.Authn authn = 1;
    v1.Vendor vendor = 2;
    ResetKind reset_kind = 3;
}

message ResetResponse {
    string task_id = 1;
}

message UserCreds {
    string username = 1;
    string password = 2;
    UserRole user_role = 3;
}

message CreateUserRequest {
    v1.Authn authn = 1;
    v1.Vendor vendor = 2;
    UserCreds user_creds = 3;
}

message CreateUserResponse {
    string task_id = 1;
}

message DeleteUserRequest {
    v1.Authn authn = 1;
    v1.Vendor vendor = 2;
    string username = 3;
}

message DeleteUserResponse {
    string task_id = 1;
}

message UpdateUserRequest {
    v1.Authn authn = 1;
    v1.Vendor vendor = 2;
    UserCreds user_creds = 3;
}

message UpdateUserResponse {
    string task_id = 1;
}

enum UserRole {
    USER_ROLE_UNSPECIFIED = 0;
    USER_ROLE_ADMIN = 1;
    USER_ROLE_USER = 2;
}

enum ResetKind {
    RESET_KIND_UNSPECIFIED = 0;
    RESET_KIND_COLD = 1;
    RESET_KIND_WARM = 2;
}

enum NetworkSource {
    NETWORK_SOURCE_UNSPECIFIED = 0;
    NETWORK_SOURCE_DHCP = 1;
    NETWORK_SOURCE_STATIC = 2;
}